@page "/campaigns/{campaignId:guid}/edit"
@using Microsoft.EntityFrameworkCore
@inject AppDbContext AppDbContext
@inject NavigationManager NavigationManager
@inject SemanticKernelService SemanticKernelService
@inject ILogger<Campaigns_Edit> Logger

@code {
    [Parameter]
    public Guid campaignId { get; set; }

    private Campaign campaign;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            campaign = await AppDbContext.Campaigns
                .Include(c => c.Victim)
                .Include(c => c.Offender)
                .Include(c => c.Suspects)
                .FirstOrDefaultAsync(c => c.Id == campaignId);

            if (campaign == null)
            {
                // Handle the case when the campaign is not found
                NavigationManager.NavigateTo("/campaigns");
            }
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error loading campaign details.");
        }
    }

    private async Task SaveChanges()
    {
        try
        {
            campaign.OpenAIFileId = await SemanticKernelService.UploadFile(
                campaign: campaign,
                cancellationToken: default
            );
            AppDbContext.Campaigns.Update(campaign);
            await AppDbContext.SaveChangesAsync();
            NavigationManager.NavigateTo("/campaigns");
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error saving campaign details.");
        }
    }
}

<h3>Edit Campaign</h3>

@if (campaign == null)
{
    <p>Loading...</p>
}
else
{
    <EditForm Model="@campaign" OnValidSubmit="SaveChanges">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="title">Title</label>
            <InputText id="title" class="form-control" @bind-Value="campaign.Title" />
        </div>

        <div class="form-group">
            <label for="plot">Plot</label>
            <InputTextArea id="plot" class="form-control" @bind-Value="campaign.Plot" />
        </div>
        
        <h3>Victim</h3>
        <div class="row form-group">
            <CharacterCardForm Character=@campaign.Victim Plot=@campaign.Plot />
        </div>

        <h3>Suspects</h3>
        <div class="row form-group">
        @foreach (var suspect in campaign.Suspects)
        {
            <CharacterCardForm Character=@suspect Plot=@campaign.Plot />
        }
        </div>

        <div class="form-group">
            <label for="offender">Offender</label>
            <InputText id="offender" class="form-control" @bind-Value="campaign.Offender.Name" />
        </div>

        <div class="form-group">
            <label for="motive">Motive</label>
            <InputTextArea id="motive" class="form-control" @bind-Value="campaign.Motive" />
        </div>

        <div class="form-group">
            <label for="motive">Method</label>
            <InputTextArea id="motive" class="form-control" @bind-Value="campaign.Method" />
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" @onclick="@(()=>NavigationManager.NavigateTo("/campaigns"))" class="btn btn-secondary">Cancel</button>
    </EditForm>
}